{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 79, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport type { Unit } from \"@bitwars/shared\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function normalizeString(inputString: string): string {\n  // 1. Replace special characters with spaces\n  let cleanedString = inputString.toLowerCase().trim().replace(/[^a-zA-Z0-9\\s]/g, ' ');\n\n  // 2. Replace consecutive spaces with a single space\n  cleanedString = cleanedString.replace(/\\s+/g, ' ');\n\n  // 3. Trim leading/trailing spaces\n  cleanedString = cleanedString.trim();\n\n  return cleanedString;\n}\n\nexport function consoleUnit(unit: Unit) {\n  console.log(unit);\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAGO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sOAAO,EAAC,IAAA,gMAAI,EAAC;AACtB;AAEO,SAAS,gBAAgB,WAAmB;IACjD,4CAA4C;IAC5C,IAAI,gBAAgB,YAAY,WAAW,GAAG,IAAI,GAAG,OAAO,CAAC,mBAAmB;IAEhF,oDAAoD;IACpD,gBAAgB,cAAc,OAAO,CAAC,QAAQ;IAE9C,kCAAkC;IAClC,gBAAgB,cAAc,IAAI;IAElC,OAAO;AACT;AAEO,SAAS,YAAY,IAAU;IACpC,QAAQ,GAAG,CAAC;AACd","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/lib/constants.ts"],"sourcesContent":["export const PLAYER_NAMESPACE = '20f3bcf2-e4c3-4589-a7b5-9697afe1b1a8';\nexport const PLAYER_COLORS = [\n  'bg-red-500',\n  'bg-green-500',\n  'bg-blue-500',\n  'bg-yellow-500',\n  'bg-purple-500',\n  'bg-orange-500',\n];\nexport const PLAYER_NAME_PARTS = [\n    \"Grimm\",\n    \"Alice\",\n    \"Bob\",\n    \"Charlie\",\n    \"David\",\n    \"Eve\",\n    \"Frank\",\n    \"Grace\",\n    \"Hannah\",\n    \"Isaac\",\n    \"Jack\",\n    \"Jill\",\n    \"Katie\",\n    \"Liam\",\n    \"Mia\",\n    \"Noah\",\n    \"Olivia\",\n    \"Patrick\",\n    \"Quinn\",\n    \"Rachel\",\n    \"Sam\",\n    \"Taylor\",\n    \"Victor\",\n    \"Wendy\",\n    \"Xander\",\n    \"Yara\",\n    \"Zack\",\n];\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,mBAAmB;AACzB,MAAM,gBAAgB;IAC3B;IACA;IACA;IACA;IACA;IACA;CACD;AACM,MAAM,oBAAoB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH","debugId":null}},
    {"offset": {"line": 160, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/features/users/schema/player/mappers.ts"],"sourcesContent":["import type { Player } from \"./player\";\nimport type { PlayerDoc } from \"./playerDoc\";\nimport type { PlayerLogin } from \"./playerLogin\";\nimport { v5 as uuidv5 } from 'uuid';\nimport { normalizeString } from \"@/lib/utils\";\nimport { PLAYER_NAMESPACE } from \"@/lib/constants\";\n\nexport const loginToPlayer = (login: PlayerLogin): Player => {\n  const gameId = process.env.GAME_ID;\n  if (!gameId) throw new Error(\"GAME_ID not set\");\n  const normalized = normalizeString(login.name);\n  const id = uuidv5(normalized, PLAYER_NAMESPACE);\n  const createdAt = new Date();\n  const lastSeen = createdAt;\n  const createdAtMs = createdAt.getTime();\n  const lastSeenMs = lastSeen.getTime();\n  return {\n    id,\n    gameId,\n    name: login.name,\n    normalizedName: normalizeString(login.name),\n    color: login.color,\n    createdAt,\n    lastSeen,\n    createdAtMs,\n    lastSeenMs,\n  };\n};\n\nexport const playerToPlayerDoc = (p: Player): PlayerDoc => ({\n  ...p,\n  createdAt: p.createdAt.toISOString(),\n  lastSeen: p.lastSeen.toISOString(),\n});\n\nexport const playerDocToPlayer = (d: PlayerDoc): Player => {\n  return {\n    ...d,\n    createdAt: new Date(d.createdAt),\n    lastSeen: new Date(d.lastSeen),\n  };\n};\n"],"names":[],"mappings":";;;;;;;;AAGA;AACA;AACA;;;;AAEO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO;IAClC,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAC7B,MAAM,aAAa,IAAA,uJAAe,EAAC,MAAM,IAAI;IAC7C,MAAM,KAAK,IAAA,oPAAM,EAAC,YAAY,4JAAgB;IAC9C,MAAM,YAAY,IAAI;IACtB,MAAM,WAAW;IACjB,MAAM,cAAc,UAAU,OAAO;IACrC,MAAM,aAAa,SAAS,OAAO;IACnC,OAAO;QACL;QACA;QACA,MAAM,MAAM,IAAI;QAChB,gBAAgB,IAAA,uJAAe,EAAC,MAAM,IAAI;QAC1C,OAAO,MAAM,KAAK;QAClB;QACA;QACA;QACA;IACF;AACF;AAEO,MAAM,oBAAoB,CAAC,IAAyB,CAAC;QAC1D,GAAG,CAAC;QACJ,WAAW,EAAE,SAAS,CAAC,WAAW;QAClC,UAAU,EAAE,QAAQ,CAAC,WAAW;IAClC,CAAC;AAEM,MAAM,oBAAoB,CAAC;IAChC,OAAO;QACL,GAAG,CAAC;QACJ,WAAW,IAAI,KAAK,EAAE,SAAS;QAC/B,UAAU,IAAI,KAAK,EAAE,QAAQ;IAC/B;AACF","debugId":null}},
    {"offset": {"line": 249, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/lib/db/connection.ts"],"sourcesContent":["import { createClient } from \"redis\";\n\nexport const redis = createClient({ url: process.env.GAMESTATE_REDIS_URL });\nawait redis.connect();"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,QAAQ,IAAA,0MAAY,EAAC;IAAE,KAAK,QAAQ,GAAG,CAAC,mBAAmB;AAAC;AACzE,MAAM,MAAM,OAAO","debugId":null}},
    {"offset": {"line": 264, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/features/users/schema/keys.ts"],"sourcesContent":["export const PLAYER_INDEX = \"idx:player\";\nexport const PLAYER_PREFIX = \"player:\";\n\nexport const playerKey = (id: string) => `player:${id}`;\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,eAAe;AACrB,MAAM,gBAAgB;AAEtB,MAAM,YAAY,CAAC,KAAe,CAAC,OAAO,EAAE,IAAI","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/features/users/queries/create.ts"],"sourcesContent":["import { Player } from \"@/features/users/schema/player/player\";\nimport { redis } from \"@/lib/db/connection\";\nimport { playerKey } from \"@/features/users/schema/keys\";\nimport { playerToPlayerDoc } from \"@/features/users/schema/player/mappers\";\nimport type { RedisJSON } from \"redis\";\n\nexport async function createPlayer(player: Player) {\n  const key = playerKey(player.id);\n  const playerDoc = playerToPlayerDoc(player);\n  await redis.json.set(key, '$', playerDoc as unknown as RedisJSON);\n  return playerDoc;\n}\n"],"names":[],"mappings":";;;;AACA;AACA;AACA;;;;;;;;AAGO,eAAe,aAAa,MAAc;IAC/C,MAAM,MAAM,IAAA,wKAAS,EAAC,OAAO,EAAE;IAC/B,MAAM,YAAY,IAAA,6LAAiB,EAAC;IACpC,MAAM,wJAAK,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,KAAK;IAC/B,OAAO;AACT","debugId":null}},
    {"offset": {"line": 308, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/app/api/players/login/route.ts"],"sourcesContent":["// app/api/players/login/route.ts\nimport { NextResponse } from 'next/server';\nimport { sign, SignOptions } from 'jsonwebtoken';\nimport type { PlayerLogin } from '@/features/users/schema/player/playerLogin';\nimport { loginToPlayer, playerDocToPlayer } from '@/features/users/schema/player/mappers';\nimport { createPlayer } from '@/features/users/queries/create';\n\nexport async function POST(request: Request) {\n  const body = (await request.json()) as PlayerLogin;\n  console.log({body});\n  const player = loginToPlayer(body);\n  const tokenPayload = {\n    playerId: player.id,\n    name: player.name,\n    normalizedName: player.normalizedName,\n  };\n  const tokenOptions: SignOptions = {\n    expiresIn: '1d',\n    algorithm: 'HS256',\n  };\n  const token = sign(tokenPayload, process.env.PLAYER_AUTH_SECRET!, tokenOptions);\n  const dbResult = await createPlayer(player);\n  const responseBody = { player: playerDocToPlayer(dbResult) };\n\n  const res = NextResponse.json(responseBody, { status: 200 });\n\n  res.cookies.set({\n    name: 'player_token',\n    value: token,\n    httpOnly: true,                // <-- important\n    secure: process.env.NODE_ENV === 'production',\n    sameSite: 'lax',\n    path: '/',\n    maxAge: 60 * 60 * 24,          // 1 day, match your JWT exp\n  });\n\n  return res;\n}\n"],"names":[],"mappings":"AAAA,iCAAiC;;;;;AACjC;AACA;AAEA;AACA;;;;;;;;;AAEO,eAAe,KAAK,OAAgB;IACzC,MAAM,OAAQ,MAAM,QAAQ,IAAI;IAChC,QAAQ,GAAG,CAAC;QAAC;IAAI;IACjB,MAAM,SAAS,IAAA,yLAAa,EAAC;IAC7B,MAAM,eAAe;QACnB,UAAU,OAAO,EAAE;QACnB,MAAM,OAAO,IAAI;QACjB,gBAAgB,OAAO,cAAc;IACvC;IACA,MAAM,eAA4B;QAChC,WAAW;QACX,WAAW;IACb;IACA,MAAM,QAAQ,IAAA,wMAAI,EAAC,cAAc,QAAQ,GAAG,CAAC,kBAAkB,EAAG;IAClE,MAAM,WAAW,MAAM,IAAA,8KAAY,EAAC;IACpC,MAAM,eAAe;QAAE,QAAQ,IAAA,6LAAiB,EAAC;IAAU;IAE3D,MAAM,MAAM,+QAAY,CAAC,IAAI,CAAC,cAAc;QAAE,QAAQ;IAAI;IAE1D,IAAI,OAAO,CAAC,GAAG,CAAC;QACd,MAAM;QACN,OAAO;QACP,UAAU;QACV,QAAQ,oDAAyB;QACjC,UAAU;QACV,MAAM;QACN,QAAQ,KAAK,KAAK;IACpB;IAEA,OAAO;AACT","debugId":null}}]
}