{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 3, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 55, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/lib/constants.ts"],"sourcesContent":["export const PLAYER_NAMESPACE = '20f3bcf2-e4c3-4589-a7b5-9697afe1b1a8';\nexport const PLAYER_COLORS = [\n  'bg-red-500',\n  'bg-green-500',\n  'bg-blue-500',\n  'bg-yellow-500',\n  'bg-purple-500',\n  'bg-orange-500',\n];\nexport const PLAYER_NAME_PARTS = [\n    \"Grimm\",\n    \"Alice\",\n    \"Bob\",\n    \"Charlie\",\n    \"David\",\n    \"Eve\",\n    \"Frank\",\n    \"Grace\",\n    \"Hannah\",\n    \"Isaac\",\n    \"Jack\",\n    \"Jill\",\n    \"Katie\",\n    \"Liam\",\n    \"Mia\",\n    \"Noah\",\n    \"Olivia\",\n    \"Patrick\",\n    \"Quinn\",\n    \"Rachel\",\n    \"Sam\",\n    \"Taylor\",\n    \"Victor\",\n    \"Wendy\",\n    \"Xander\",\n    \"Yara\",\n    \"Zack\",\n];\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,mBAAmB;AACzB,MAAM,gBAAgB;IAC3B;IACA;IACA;IACA;IACA;IACA;CACD;AACM,MAAM,oBAAoB;IAC7B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;CACH","debugId":null}},
    {"offset": {"line": 149, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/lib/db/connection.ts"],"sourcesContent":["import { createClient } from \"redis\";\n\nexport const redis = createClient({ url: process.env.GAMESTATE_REDIS_URL });\nawait redis.connect();"],"names":[],"mappings":";;;;AAAA;;AAEO,MAAM,QAAQ,IAAA,0MAAY,EAAC;IAAE,KAAK,QAAQ,GAAG,CAAC,mBAAmB;AAAC;AACzE,MAAM,MAAM,OAAO","debugId":null}},
    {"offset": {"line": 164, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/features/users/schema/keys.ts"],"sourcesContent":["export const PLAYER_INDEX = \"idx:player\";\nexport const PLAYER_PREFIX = \"player:\";\n\nexport const playerKey = (id: string) => `player:${id}`;\n"],"names":[],"mappings":";;;;;;;;AAAO,MAAM,eAAe;AACrB,MAAM,gBAAgB;AAEtB,MAAM,YAAY,CAAC,KAAe,CAAC,OAAO,EAAE,IAAI","debugId":null}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\nimport type { Unit } from \"@bitwars/shared\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n\nexport function normalizeString(inputString: string): string {\n  // 1. Replace special characters with spaces\n  let cleanedString = inputString.toLowerCase().trim().replace(/[^a-zA-Z0-9\\s]/g, ' ');\n\n  // 2. Replace consecutive spaces with a single space\n  cleanedString = cleanedString.replace(/\\s+/g, ' ');\n\n  // 3. Trim leading/trailing spaces\n  cleanedString = cleanedString.trim();\n\n  return cleanedString;\n}\n\nexport function consoleUnit(unit: Unit) {\n  console.log(unit);\n}\n"],"names":[],"mappings":";;;;;;;;AAAA;AACA;;;AAGO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,IAAA,sOAAO,EAAC,IAAA,gMAAI,EAAC;AACtB;AAEO,SAAS,gBAAgB,WAAmB;IACjD,4CAA4C;IAC5C,IAAI,gBAAgB,YAAY,WAAW,GAAG,IAAI,GAAG,OAAO,CAAC,mBAAmB;IAEhF,oDAAoD;IACpD,gBAAgB,cAAc,OAAO,CAAC,QAAQ;IAE9C,kCAAkC;IAClC,gBAAgB,cAAc,IAAI;IAElC,OAAO;AACT;AAEO,SAAS,YAAY,IAAU;IACpC,QAAQ,GAAG,CAAC;AACd","debugId":null}},
    {"offset": {"line": 216, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/features/users/schema/player/mappers.ts"],"sourcesContent":["import type { Player } from \"./player\";\nimport type { PlayerDoc } from \"./playerDoc\";\nimport type { PlayerLogin } from \"./playerLogin\";\nimport { v5 as uuidv5 } from 'uuid';\nimport { normalizeString } from \"@/lib/utils\";\nimport { PLAYER_NAMESPACE } from \"@/lib/constants\";\n\nexport const loginToPlayer = (login: PlayerLogin): Player => {\n  const gameId = process.env.GAME_ID;\n  if (!gameId) throw new Error(\"GAME_ID not set\");\n  const normalized = normalizeString(login.name);\n  const id = uuidv5(normalized, PLAYER_NAMESPACE);\n  const createdAt = new Date();\n  const lastSeen = createdAt;\n  const createdAtMs = createdAt.getTime();\n  const lastSeenMs = lastSeen.getTime();\n  return {\n    id,\n    gameId,\n    name: login.name,\n    normalizedName: normalizeString(login.name),\n    color: login.color,\n    createdAt,\n    lastSeen,\n    createdAtMs,\n    lastSeenMs,\n  };\n};\n\nexport const playerToPlayerDoc = (p: Player): PlayerDoc => ({\n  ...p,\n  createdAt: p.createdAt.toISOString(),\n  lastSeen: p.lastSeen.toISOString(),\n});\n\nexport const playerDocToPlayer = (d: PlayerDoc): Player => {\n  return {\n    ...d,\n    createdAt: new Date(d.createdAt),\n    lastSeen: new Date(d.lastSeen),\n  };\n};\n"],"names":[],"mappings":";;;;;;;;AAGA;AACA;AACA;;;;AAEO,MAAM,gBAAgB,CAAC;IAC5B,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO;IAClC,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAC7B,MAAM,aAAa,IAAA,uJAAe,EAAC,MAAM,IAAI;IAC7C,MAAM,KAAK,IAAA,oPAAM,EAAC,YAAY,4JAAgB;IAC9C,MAAM,YAAY,IAAI;IACtB,MAAM,WAAW;IACjB,MAAM,cAAc,UAAU,OAAO;IACrC,MAAM,aAAa,SAAS,OAAO;IACnC,OAAO;QACL;QACA;QACA,MAAM,MAAM,IAAI;QAChB,gBAAgB,IAAA,uJAAe,EAAC,MAAM,IAAI;QAC1C,OAAO,MAAM,KAAK;QAClB;QACA;QACA;QACA;IACF;AACF;AAEO,MAAM,oBAAoB,CAAC,IAAyB,CAAC;QAC1D,GAAG,CAAC;QACJ,WAAW,EAAE,SAAS,CAAC,WAAW;QAClC,UAAU,EAAE,QAAQ,CAAC,WAAW;IAClC,CAAC;AAEM,MAAM,oBAAoB,CAAC;IAChC,OAAO;QACL,GAAG,CAAC;QACJ,WAAW,IAAI,KAAK,EAAE,SAAS;QAC/B,UAAU,IAAI,KAAK,EAAE,QAAQ;IAC/B;AACF","debugId":null}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/features/users/queries/read/getActivePlayers.ts"],"sourcesContent":["import { redis } from \"@/lib/db/connection\";\nimport { PLAYER_INDEX } from \"@/features/users/schema/keys\";\nimport { playerDocToPlayer } from \"@/features/users/schema/player/mappers\";\nimport type { Player } from \"@/features/users/schema/player/player\";\n\nexport async function getActivePlayers(windowMs = 600_000): Promise<Player[]> {\n    const gameId = process.env.GAME_ID;\n    if (!gameId) throw new Error(\"GAME_ID not set\");\n  \n    const min = (Date.now() - windowMs).toString();\n    const q = `@gameId:{${gameId}} @lastSeen:[${min} +inf]`;\n  \n    const res = await redis.sendCommand([\n        'FT.SEARCH', PLAYER_INDEX, \"*\",\n        'RETURN', '1', '$',\n        'LIMIT', '0', '200',\n        'DIALECT', '4'\n      ]);\n\n    if (res === null) {\n        return [];\n    }\n    if (!Array.isArray(res)) {\n        throw new Error(\"Unexpected response format\");\n    }\n\n    const total = res[0] as number;\n    const docs: any[] = [];\n    for (let i = 1; i < res.length; i += 2) {\n      const fields = res[i + 1] as string[];\n      const idx = fields.indexOf('$');\n      const doc = JSON.parse(fields[idx + 1] as string)[0];\n      if (idx >= 0) docs.push(doc);\n    }\n    const activePlayers = docs.map((doc) => playerDocToPlayer(doc));\n    return activePlayers;\n  }\n  "],"names":[],"mappings":";;;;AAAA;AACA;AACA;;;;;;;;AAGO,eAAe,iBAAiB,WAAW,OAAO;IACrD,MAAM,SAAS,QAAQ,GAAG,CAAC,OAAO;IAClC,IAAI,CAAC,QAAQ,MAAM,IAAI,MAAM;IAE7B,MAAM,MAAM,CAAC,KAAK,GAAG,KAAK,QAAQ,EAAE,QAAQ;IAC5C,MAAM,IAAI,CAAC,SAAS,EAAE,OAAO,aAAa,EAAE,IAAI,MAAM,CAAC;IAEvD,MAAM,MAAM,MAAM,wJAAK,CAAC,WAAW,CAAC;QAChC;QAAa,2KAAY;QAAE;QAC3B;QAAU;QAAK;QACf;QAAS;QAAK;QACd;QAAW;KACZ;IAEH,IAAI,QAAQ,MAAM;QACd,OAAO,EAAE;IACb;IACA,IAAI,CAAC,MAAM,OAAO,CAAC,MAAM;QACrB,MAAM,IAAI,MAAM;IACpB;IAEA,MAAM,QAAQ,GAAG,CAAC,EAAE;IACpB,MAAM,OAAc,EAAE;IACtB,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,MAAM,EAAE,KAAK,EAAG;QACtC,MAAM,SAAS,GAAG,CAAC,IAAI,EAAE;QACzB,MAAM,MAAM,OAAO,OAAO,CAAC;QAC3B,MAAM,MAAM,KAAK,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,CAAW,CAAC,EAAE;QACpD,IAAI,OAAO,GAAG,KAAK,IAAI,CAAC;IAC1B;IACA,MAAM,gBAAgB,KAAK,GAAG,CAAC,CAAC,MAAQ,IAAA,6LAAiB,EAAC;IAC1D,OAAO;AACT","debugId":null}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/features/users/utils/suggestedLogin.ts"],"sourcesContent":["import { PLAYER_NAME_PARTS } from \"@/lib/constants\";\n\nexport const getRandomNamePart = (): string => {\n    const names = PLAYER_NAME_PARTS;\n    const randomIndex = Math.floor(Math.random() * names.length);\n    return names[randomIndex];\n}\n\nexport const createRandomName = (): string => {\n    const name = getRandomNamePart() + getRandomNamePart();\n    return name;\n}"],"names":[],"mappings":";;;;;;AAAA;;AAEO,MAAM,oBAAoB;IAC7B,MAAM,QAAQ,6JAAiB;IAC/B,MAAM,cAAc,KAAK,KAAK,CAAC,KAAK,MAAM,KAAK,MAAM,MAAM;IAC3D,OAAO,KAAK,CAAC,YAAY;AAC7B;AAEO,MAAM,mBAAmB;IAC5B,MAAM,OAAO,sBAAsB;IACnC,OAAO;AACX","debugId":null}},
    {"offset": {"line": 346, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/features/users/server-functions/getSuggestedLogin.ts"],"sourcesContent":["'use server';\n\nimport { PLAYER_COLORS } from \"@/lib/constants\";\nimport { getActivePlayers } from \"@/features/users/queries/read/getActivePlayers\";\nimport { createRandomName } from \"@/features/users/utils/suggestedLogin\";\n\nexport const getSuggestedLoginDetails = async (): Promise<{suggestedName: string, availableColors: string[]}> => {\n    const activePlayers = await getActivePlayers();\n    const availableColors = PLAYER_COLORS.filter((color) => !activePlayers.some((p) => p.color === color));\n    let suggestedName;\n    for (let i = 0; i < 10; i++) {\n        const candidateName = createRandomName();\n        if (!activePlayers.some((p) => p.name === candidateName)) {\n            suggestedName = candidateName;\n            break;\n        }\n    }\n    if (!suggestedName) {\n        throw new Error(\"No available player names found\");\n    }\n    return { suggestedName, availableColors};\n}"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;;;;;;;;;;AAEO,MAAM,2BAA2B;IACpC,MAAM,gBAAgB,MAAM,IAAA,oMAAgB;IAC5C,MAAM,kBAAkB,yJAAa,CAAC,MAAM,CAAC,CAAC,QAAU,CAAC,cAAc,IAAI,CAAC,CAAC,IAAM,EAAE,KAAK,KAAK;IAC/F,IAAI;IACJ,IAAK,IAAI,IAAI,GAAG,IAAI,IAAI,IAAK;QACzB,MAAM,gBAAgB,IAAA,wLAAgB;QACtC,IAAI,CAAC,cAAc,IAAI,CAAC,CAAC,IAAM,EAAE,IAAI,KAAK,gBAAgB;YACtD,gBAAgB;YAChB;QACJ;IACJ;IACA,IAAI,CAAC,eAAe;QAChB,MAAM,IAAI,MAAM;IACpB;IACA,OAAO;QAAE;QAAe;IAAe;AAC3C;;;IAfa;;AAAA,gXAAA","debugId":null}},
    {"offset": {"line": 394, "column": 0}, "map": {"version":3,"sources":["file:///home/andrew/Development/bitwars/apps/web/src/app/api/players/getSuggestedLoginDetails/route.ts"],"sourcesContent":["import { NextResponse } from \"next/server\";\nimport { getSuggestedLoginDetails } from \"@/features/users/server-functions/getSuggestedLogin\";\n\n\n\nexport async function GET() {\n  const suggestedLoginDetails = await getSuggestedLoginDetails();\n  return NextResponse.json({ suggestedLoginDetails }, { status: 200 });\n}\n"],"names":[],"mappings":";;;;AAAA;AACA;;;;;;;AAIO,eAAe;IACpB,MAAM,wBAAwB,MAAM,IAAA,iNAAwB;IAC5D,OAAO,+QAAY,CAAC,IAAI,CAAC;QAAE;IAAsB,GAAG;QAAE,QAAQ;IAAI;AACpE","debugId":null}}]
}