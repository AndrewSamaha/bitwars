// This file is @generated by prost-build.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Vec2 {
    #[prost(float, tag = "1")]
    pub x: f32,
    #[prost(float, tag = "2")]
    pub y: f32,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct Entity {
    #[prost(uint64, tag = "1")]
    pub id: u64,
    #[prost(message, optional, tag = "3")]
    pub pos: ::core::option::Option<Vec2>,
    #[prost(message, optional, tag = "4")]
    pub vel: ::core::option::Option<Vec2>,
    #[prost(message, optional, tag = "5")]
    pub force: ::core::option::Option<Vec2>,
}
/// Sparse delta: only include fields that changed meaningfully.
/// proto3 'optional' yields Option<T> in Rust (prost) and presence in TS.
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct EntityDelta {
    #[prost(uint64, tag = "1")]
    pub id: u64,
    #[prost(message, optional, tag = "2")]
    pub pos: ::core::option::Option<Vec2>,
    #[prost(message, optional, tag = "3")]
    pub vel: ::core::option::Option<Vec2>,
    #[prost(message, optional, tag = "4")]
    pub force: ::core::option::Option<Vec2>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Snapshot {
    #[prost(int64, tag = "2")]
    pub tick: i64,
    #[prost(message, repeated, tag = "3")]
    pub entities: ::prost::alloc::vec::Vec<Entity>,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Delta {
    #[prost(uint64, tag = "1")]
    pub tick: u64,
    #[prost(message, repeated, tag = "2")]
    pub updates: ::prost::alloc::vec::Vec<EntityDelta>,
}
