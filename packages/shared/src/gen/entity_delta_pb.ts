// @generated by protoc-gen-es v2.7.0 with parameter "target=ts,import_extension=js"
// @generated from file entity_delta.proto (package bitwars, syntax proto3)
/* eslint-disable */

import type { GenFile, GenMessage } from "@bufbuild/protobuf/codegenv2";
import { fileDesc, messageDesc } from "@bufbuild/protobuf/codegenv2";
import type { Vec2 } from "./vec2_pb.js";
import { file_vec2 } from "./vec2_pb.js";
import { file_entity } from "./entity_pb.js";
import type { Message } from "@bufbuild/protobuf";

/**
 * Describes the file entity_delta.proto.
 */
export const file_entity_delta: GenFile = /*@__PURE__*/
  fileDesc("ChJlbnRpdHlfZGVsdGEucHJvdG8SB2JpdHdhcnMimAEKC0VudGl0eURlbHRhEgoKAmlkGAEgASgEEh8KA3BvcxgCIAEoCzINLmJpdHdhcnMuVmVjMkgAiAEBEh8KA3ZlbBgDIAEoCzINLmJpdHdhcnMuVmVjMkgBiAEBEiEKBWZvcmNlGAQgASgLMg0uYml0d2Fycy5WZWMySAKIAQFCBgoEX3Bvc0IGCgRfdmVsQggKBl9mb3JjZWIGcHJvdG8z", [file_vec2, file_entity]);

/**
 * Sparse delta: only include fields that changed meaningfully.
 * proto3 'optional' yields Option<T> in Rust (prost) and presence in TS.
 *
 * @generated from message bitwars.EntityDelta
 */
export type EntityDelta = Message<"bitwars.EntityDelta"> & {
  /**
   * @generated from field: uint64 id = 1;
   */
  id: bigint;

  /**
   * @generated from field: optional bitwars.Vec2 pos = 2;
   */
  pos?: Vec2;

  /**
   * @generated from field: optional bitwars.Vec2 vel = 3;
   */
  vel?: Vec2;

  /**
   * @generated from field: optional bitwars.Vec2 force = 4;
   */
  force?: Vec2;
};

/**
 * Describes the message bitwars.EntityDelta.
 * Use `create(EntityDeltaSchema)` to create a new message.
 */
export const EntityDeltaSchema: GenMessage<EntityDelta> = /*@__PURE__*/
  messageDesc(file_entity_delta, 0);

